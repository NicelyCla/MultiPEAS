ECHO.   ***1.SystemInfo***
systemInfo
ECHO.   check 1.SystemInfo done
ECHO.   ######################################################################
ECHO.


ECHO.   ***2.ListHotFixes***
@echo off & wmic qfe get Caption,Description,HotFixID,InstalledOn | more & set expl=no & for /f "tokens=3-9" %a in ('systeminfo') do (ECHO."%a %b %c %d %e %f %g" | findstr /i "2000 XP 2003 2008 vista" && set expl=yes) & (ECHO."%a %b %c %d %e %f %g" | findstr /i /C:"windows 7" && set expl=yes) & if "%expl%" == "yes" ECHO.   [i] Possible exploits (https://github.com/codingo/OSCP-2/blob/master/Windows/WinPrivCheck.bat) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB2592799" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS11-080 patch is NOT installed! (Vulns: XP/SP3,2K3/SP3-afd.sys) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB3143141" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS16-032 patch is NOT installed! (Vulns: 2K8/SP1/2,Vista/SP2,7/SP1-secondary logon) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB2393802" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS11-011 patch is NOT installed! (Vulns: XP/SP2/3,2K3/SP2,2K8/SP2,Vista/SP1/2,7/SP0-WmiTraceMessageVa) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB982799" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS10-59 patch is NOT installed! (Vulns: 2K8,Vista,7/SP0-Chimichurri) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB979683" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS10-21 patch is NOT installed! (Vulns: 2K/SP4,XP/SP2/3,2K3/SP2,2K8/SP2,Vista/SP0/1/2,7/SP0-Win Kernel) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB2305420" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS10-092 patch is NOT installed! (Vulns: 2K8/SP0/1/2,Vista/SP1/2,7/SP0-Task Sched) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB981957" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS10-073 patch is NOT installed! (Vulns: XP/SP2/3,2K3/SP2/2K8/SP2,Vista/SP1/2,7/SP0-Keyboard Layout) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB4013081" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS17-017 patch is NOT installed! (Vulns: 2K8/SP2,Vista/SP2,7/SP1-Registry Hive Loading) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB977165" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS10-015 patch is NOT installed! (Vulns: 2K,XP,2K3,2K8,Vista,7-User Mode to Ring) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB941693" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS08-025 patch is NOT installed! (Vulns: 2K/SP4,XP/SP2,2K3/SP1/2,2K8/SP0,Vista/SP0/1-win32k.sys) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB920958" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS06-049 patch is NOT installed! (Vulns: 2K/SP4-ZwQuerySysInfo) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB914389" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS06-030 patch is NOT installed! (Vulns: 2K,XP/SP2-Mrxsmb.sys) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB908523" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS05-055 patch is NOT installed! (Vulns: 2K/SP4-APC Data-Free) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB890859" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS05-018 patch is NOT installed! (Vulns: 2K/SP3/4,XP/SP1/2-CSRSS) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB842526" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS04-019 patch is NOT installed! (Vulns: 2K/SP2/3/4-Utility Manager) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB835732" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS04-011 patch is NOT installed! (Vulns: 2K/SP2/3/4,XP/SP0/1-LSASS service BoF) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB841872" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS04-020 patch is NOT installed! (Vulns: 2K/SP4-POSIX) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB2975684" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS14-040 patch is NOT installed! (Vulns: 2K3/SP2,2K8/SP2,Vista/SP2,7/SP1-afd.sys Dangling Pointer) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB3136041" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS16-016 patch is NOT installed! (Vulns: 2K8/SP1/2,Vista/SP2,7/SP1-WebDAV to Address) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:"KB3057191" 1>NUL & if "%expl%" == "yes" if errorlevel 1 ECHO.MS15-051 patch is NOT installed! (Vulns: 2K3/SP2,2K8/SP2,Vista/SP2,7/SP1-win32k.sys) & if "%expl%" == "yes" wmic qfe get Caption,Description,HotFixID,InstalledOn | find

ECHO.   check 2.ListHotFixes done
ECHO.   ######################################################################
ECHO.


ECHO.   ***3.AuditSettings***
ECHO   [i] Check what is being logged
REG QUERY HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\Audit 2>nul
ECHO.   check 3.AuditSettings done
ECHO.   ######################################################################
ECHO.


ECHO.   ***4.WEFSettings***
ECHO   [i] Check where are being sent the logs
REG QUERY HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\EventLog\EventForwarding\SubscriptionManager 2>nul
ECHO.   check 4.WEFSettings done
ECHO.   ######################################################################
ECHO.


ECHO.   ***5.LAPSInstallCheck***
ECHO   [i] Check what is being logged
REG QUERY "HKEY_LOCAL_MACHINE\Software\Policies\Microsoft Services\AdmPwd" /v AdmPwdEnabled 2>nul
ECHO.   check 5.LAPSInstallCheck done
ECHO.   ######################################################################
ECHO.


ECHO.   ***6.LSAProtectionCheck***
ECHO   [i] Active if "1"
REG QUERY "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA" /v RunAsPPL 2>nul
ECHO.   check 6.LSAProtectionCheck done
ECHO.   ######################################################################
ECHO.


ECHO.   ***7.LSACredentialGuard***
ECHO   [i] Active if "1" or "2"
REG QUERY "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\LSA" /v LsaCfgFlags 2>nul
ECHO.   check 7.LSACredentialGuard done
ECHO.   ######################################################################
ECHO.


ECHO.   ***8.LogonCredentialsPlainInMemory***
ECHO   [i] Plain-text creds in memory if "1"
reg query HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest\UseLogonCredential 2>nul
ECHO.   check 8.LogonCredentialsPlainInMemory done
ECHO.   ######################################################################
ECHO.


ECHO.   ***9.CachedCreds***
ECHO   [i] You need System-rights to extract them
reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon" /v CACHEDLOGONSCOUNT 2>nul
ECHO.   check 9.CachedCreds done
ECHO.   ######################################################################
ECHO.


ECHO.   ***10.UACSettings***
ECHO.   [i] If the results read ENABLELUA REG_DWORD 0x1, part or all of the UAC components are on
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#basic-uac-bypass-full-file-system-access
REG QUERY HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\ /v EnableLUA 2>nul
ECHO.   check 10.UACSettings done
ECHO.   ######################################################################
ECHO.


ECHO.   ***11.AVSettings***
WMIC /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List | more 
ECHO.Checking for defender whitelisted PATHS
reg query "HKLM\SOFTWARE\Microsoft\Windows Defender\Exclusions\Paths" 2>nul
ECHO.   check 11.AVSettings done
ECHO.   ######################################################################
ECHO.


ECHO.   ***12.PSSettings***
ECHO.PowerShell v2 Version:
REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\PowerShellEngine /v PowerShellVersion 2>nul
ECHO.PowerShell v5 Version:
REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\3\PowerShellEngine /v PowerShellVersion 2>nul
ECHO.Transcriptions Settings:
REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\Transcription 2>nul
ECHO.Module logging settings:
REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ModuleLogging 2>nul
ECHO.Scriptblog logging settings:
REG QUERY HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\PowerShell\ScriptBlockLogging 2>nul
ECHO.
ECHO.PS default transcript history
dir %SystemDrive%\transcripts\ 2>nul
ECHO.
ECHO.Checking PS history file
dir "%APPDATA%\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt" 2>nul
ECHO.
ECHO.   check 12.PSSettings done
ECHO.   ######################################################################
ECHO.


ECHO.   ***13.MountedDisks***
ECHO.   [i] Maybe you find something interesting
(wmic logicaldisk get caption 2>nul | more) || (fsutil fsinfo drives 2>nul)
ECHO.   check 13.MountedDisks done
ECHO.   ######################################################################
ECHO.


ECHO.   ***14.Environment***
ECHO.   [i] Interesting information?
set
ECHO.   check 14.Environment done
ECHO.   ######################################################################
ECHO.


ECHO.   ***15.InstalledSoftware***
ECHO.   [i] Some weird software? Check for vulnerabilities in unknow software installed
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#software
ECHO.
dir /b "C:\Program Files" "C:\Program Files (x86)" | sort
reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall /s | findstr InstallLocation | findstr ":\\"
reg query HKLM\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\ /s | findstr InstallLocation | findstr ":\\"
IF exist C:\Windows\CCM\SCClient.exe ECHO.SCCM is installed (installers are run with SYSTEM privileges, many are vulnerable to DLL Sideloading)
ECHO.   check 15.InstalledSoftware done
ECHO.   ######################################################################
ECHO.


ECHO.   ***16.RemodeDeskCredMgr***
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#remote-desktop-credential-manager
IF exist "%LOCALAPPDATA%\Local\Microsoft\Remote Desktop Connection Manager\RDCMan.settings" ECHO.Found: RDCMan.settings in %AppLocal%\Local\Microsoft\Remote Desktop Connection Manager\RDCMan.settings, check for credentials in .rdg files
ECHO.   check 16.RemodeDeskCredMgr done
ECHO.   ######################################################################
ECHO.


ECHO.   ***17.WSUS***
ECHO.   [i] You can inject 'fake' updates into non-SSL WSUS traffic (WSUXploit)
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#wsus
reg query HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\Windows\WindowsUpdate\ 2>nul | findstr /i "wuserver" | findstr /i "http://"
ECHO.   check 17.WSUS done
ECHO.   ######################################################################
ECHO.


ECHO.   ***18.RunningProcesses***
ECHO.   [i] Something unexpected is running? Check for vulnerabilities
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#running-processes
tasklist /SVC
@echo off & setlocal enabledelayedexpansion & echo.   [i] Checking file permissions of running processes (File backdooring - maybe the same files start automatically when Administrator logs in) & (for /f "tokens=2 delims='='" %x in ('wmic process list full^|find /i "executablepath"^|find /i /v "system32"^|find ":"') do @for /f eol^=^"^ delims^=^" %z in ('ECHO.%x') do @icacls "%z" 2>nul | findstr /i "(F) (M) (W) :\\" | findstr /i ":\\ everyone authenticated users todos %username%" && echo. %z) & echo.   [i] Checking directory permissions of running processes (DLL injection) & (for /f "tokens=2 delims='='" %x in ('wmic process list full^|find /i "executablepath"^|find /i /v "system32"^|find ":"') do @for /f eol^=^"^ delims^=^" %y in ('ECHO.%x') do @icacls "%~dpy\" 2>nul | findstr /i "(F) (M) (W) :\\" | findstr /i ":\\ everyone authenticated users todos %username%" && echo. %~dpy\)


ECHO.   check 18.RunningProcesses done
ECHO.   ######################################################################
ECHO.


ECHO.   ***19.RunAtStartup***
ECHO.   [i] Check if you can modify any binary that is going to be executed by admin or if you can impersonate a not found binary
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#run-at-startup
::(autorunsc.exe -m -nobanner -a * -ct /accepteula 2>nul || wmic startup get caption,command 2>nul | more & ^
reg query HKLM\Software\Microsoft\Windows\CurrentVersion\Run 2>nul & ^
reg query HKLM\Software\Microsoft\Windows\CurrentVersion\RunOnce 2>nul & ^
reg query HKCU\Software\Microsoft\Windows\CurrentVersion\Run 2>nul & ^
reg query HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce 2>nul & ^
ECHO.
icacls "C:\Documents and Settings\All Users\Start Menu\Programs\Startup" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "C:\Documents and Settings\All Users\Start Menu\Programs\Startup\*" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "C:\Documents and Settings\%username%\Start Menu\Programs\Startup" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "C:\Documents and Settings\%username%\Start Menu\Programs\Startup\*" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
ECHO.
icacls "%programdata%\Microsoft\Windows\Start Menu\Programs\Startup" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "%programdata%\Microsoft\Windows\Start Menu\Programs\Startup\*" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "%appdata%\Microsoft\Windows\Start Menu\Programs\Startup" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
icacls "%appdata%\Microsoft\Windows\Start Menu\Programs\Startup\*" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. & ^
ECHO.
schtasks /query /fo TABLE /nh | findstr /v /i "disable deshab informa")

ECHO.   check 19.RunAtStartup done
ECHO.   ######################################################################
ECHO.


ECHO.   ***20.AlwaysInstallElevated***
ECHO.   [i] If '1' then you can install a .msi file with admin privileges ;)
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#alwaysinstallelevated
reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated 2> nul
reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer /v AlwaysInstallElevated 2> nul
ECHO.   check 20.AlwaysInstallElevated done
ECHO.   ######################################################################
ECHO.


ECHO.   ***21.NetworkShares***
net share
ECHO.   check 21.NetworkShares done
ECHO.   ######################################################################
ECHO.


ECHO.   ***22.NetworkInterfaces***
ipconfig  /all
ECHO.   check 22.NetworkInterfaces done
ECHO.   ######################################################################
ECHO.


ECHO.   ***23.NetworkUsedPorts***
ECHO.   [i] Check for services restricted from the outside
netstat -ano | findstr /i listen
ECHO.   check 23.NetworkUsedPorts done
ECHO.   ######################################################################
ECHO.


ECHO.   ***24.ARP***
arp -A
ECHO.   check 24.ARP done
ECHO.   ######################################################################
ECHO.


ECHO.   ***25.NetworkRoutes***
route print
ECHO.   check 25.NetworkRoutes done
ECHO.   ######################################################################
ECHO.


ECHO.   ***26.WindowsHostsFile***
type C:\WINDOWS\System32\drivers\etc\hosts | findstr /v "^#"
ECHO.   check 26.WindowsHostsFile done
ECHO.   ######################################################################
ECHO.


ECHO.   ***27.DNSCache***
ipconfig /displaydns | findstr "Record" | findstr "Name Host"
ECHO.   check 27.DNSCache done
ECHO.   ######################################################################
ECHO.


ECHO.   ***28.WifiCreds***
ECHO.  "WIFI"
for /f "tokens=3,* delims=: " %a in ('netsh wlan show profiles ^| find "Profile "') do @echo off > nul & (netsh wlan show profiles name="%b" key=clear | findstr "SSID Cipher Content" | find /v "Number" & echo.) & @echo on*for
Netsh wlan show profile name=* key=clear
ECHO.   check 28.WifiCreds done
ECHO.   ######################################################################
ECHO.


ECHO.   ***29.BasicUserInfo***
ECHO.   [i] Check if you are inside the Administrators group or if you have enabled any token that can be use to escalate privileges like SeImpersonatePrivilege, SeAssignPrimaryPrivilege, SeTcbPrivilege, SeBackupPrivilege, SeRestorePrivilege, SeCreateTokenPrivilege, SeLoadDriverPrivilege, SeTakeOwnershipPrivilege, SeDebbugPrivilege
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#users-and-groups
ECHO.
ECHO. "CURRENT USER"
net user %username%
net user %USERNAME% /domain 2>nul
whoami /all

ECHO.   check 29.BasicUserInfo done
ECHO.   ######################################################################
ECHO.


ECHO.   ***30.BasicUserInfoUsers***
net user
ECHO.   check 30.BasicUserInfoUsers done
ECHO.   ######################################################################
ECHO.


ECHO.   ***31.BasicUserInfoGroups***
net localgroup
ECHO.   check 31.BasicUserInfoGroups done
ECHO.   ######################################################################
ECHO.


ECHO.   ***32.BasicUserInfoAdminGroups***
REM seems to be localised
net localgroup Administrators 2>nul
net localgroup Administradores 2>nul
ECHO.   check 32.BasicUserInfoAdminGroups done
ECHO.   ######################################################################
ECHO.


ECHO.   ***33.BasicUserInfoLoggedUser***
quser
query user
net user
ECHO.   check 33.BasicUserInfoLoggedUser done
ECHO.   ######################################################################
ECHO.


ECHO.   ***34.KerberosTickets***
klist
ECHO.   check 34.KerberosTickets done
ECHO.   ######################################################################
ECHO.


ECHO.   ***35.CurrentClipboard***
ECHO.   [i] Any passwords inside the clipboard?
powershell -command "Get-Clipboard" 2>nul
ECHO.   check 35.CurrentClipboard done
ECHO.   ######################################################################
ECHO.


ECHO.   ***36.ServiceVulnerabilities***
:ServiceVulnerabilities
ECHO. SERVICE PERMISSIONS WITH accesschk.exe FOR 'Authenticated users', Everyone, BUILTIN\Users, Todos and CURRENT USER"
ECHO.   [i] If Authenticated Users have SERVICE_ALL_ACCESS or SERVICE_CHANGE_CONFIG or WRITE_DAC or WRITE_OWNER or GENERIC_WRITE or GENERIC_ALL, you can modify the binary that is going to be executed by the service and start/stop the service
ECHO.   [i] If accesschk.exe is not in PATH, nothing will be found here
ECHO.   [i] AUTHETICATED USERS
accesschk.exe -uwcqv "Authenticated Users" * /accepteula 2>nul
ECHO.   [i] EVERYONE
accesschk.exe -uwcqv "Everyone" * /accepteula 2>nul
ECHO.   [i] BUILTIN\Users
accesschk.exe -uwcqv "BUILTIN\Users" * /accepteula 2>nul
ECHO.   [i] TODOS
accesschk.exe -uwcqv "Todos" * /accepteula 2>nul
ECHO.   [i] %USERNAME%
accesschk.exe -uwcqv %username% * /accepteula 2>nul
ECHO.
ECHO.   [+] SERVICE PERMISSIONS WITH accesschk.exe FOR *"
ECHO.   [i] Check for weird service permissions for unexpected groups"
accesschk.exe -uwcqv * /accepteula 2>nul
ECHO.   check 36.ServiceVulnerabilities done
ECHO.   ######################################################################
ECHO.


ECHO.   ***37.ServiceBinaryPermissions***
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services
ECHO.   SERVICE BINARY PERMISSIONS WITH WMIC and ICACLS"
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services
@echo off & for /f "tokens=2 delims='='" %a in ('cmd.exe /c wmic service list full ^| findstr /i "pathname" ^|findstr /i /v "system32"') do (for /f eol^=^"^ delims^=^" %b in ("%a") do icacls "%b" 2>nul | findstr /i "(F) (M) (W) :\\" | findstr /i ":\\ everyone authenticated users todos usuarios %username%" && ECHO. )
ECHO.   check 37.ServiceBinaryPermissions done
ECHO.   ######################################################################
ECHO.


ECHO.   ***38.CheckRegistryModificationAbilities***
ECHO.   [+] CHECK IF YOU CAN MODIFY ANY SERVICE REGISTRY"
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services
@echo off & for /f %a in ('reg query hklm\system\currentcontrolset\services') do @del %temp%\reg.hiv >nul 2>&1 & reg save %a %temp%\reg.hiv >nul 2>&1 && reg restore %a %temp%\reg.hiv >nul 2>&1 && echo You can modify %a

ECHO.   check 38.CheckRegistryModificationAbilities done
ECHO.   ######################################################################
ECHO.


ECHO.   ***39.UnquotedServicePaths***
ECHO.   UNQUOTED SERVICE PATHS
ECHO.   List all unquoted service paths, excluding those belonging to built-in Windows services:
ECHO.   [i] When the path is not quoted (ex: C:\Program files\soft\new folder\exec.exe) Windows will try to execute first 'C:\Program.exe', then 'C:\Program Files\soft\new.exe' and finally 'C:\Program Files\soft\new folder\exec.exe'. Try to create 'C:\Program Files\soft\new.exe'
ECHO.   [i] The permissions are also checked and filtered using icacls
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#services

wmic service get name,displayname,pathname,startmode |findstr /i "Auto" | findstr /i /v "C:\Windows\\" |findstr /i /v """
wmic service get name,displayname,pathname,startmode | findstr /i /v "C:\\Windows\\system32\\" |findstr /i /v """
ECHO.   check 39.UnquotedServicePaths done
ECHO.   ######################################################################
ECHO.


ECHO.   ***40.PATHenvHijacking***
ECHO.   [i] Maybe you can take advantage of modifying/creating some binary in some of the following locations
ECHO.   [i] PATH variable entries permissions - place binary or DLL to execute instead of legitimate
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#dll-hijacking
@echo off & for %A in ("%path:;=";"%") do ( cmd.exe /c icacls "%~A" 2>nul | findstr /i "(F) (M) (W) :\" | findstr /i ":\\ everyone authenticated users todos %username%" && ECHO. )
ECHO.   check 40.PATHenvHijacking done
ECHO.   ######################################################################
ECHO.


ECHO.   ***41.WindowsCredentials***
ECHO.  "CREDENTIALS"
ECHO.  "WINDOWS VAULT"
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#windows-vault
cmdkey /list
ECHO.   check 41.WindowsCredentials done
ECHO.   ######################################################################
ECHO.


ECHO.   ***42.DPAPIMasterKeys***
ECHO.   "DPAPI MASTER KEYS"
ECHO.   [i] Use the Mimikatz 'dpapi::masterkey' module with appropriate arguments (/rpc) to decrypt
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#dpapi
powershell -command "Get-ChildItem %appdata%\Microsoft\Protect" 2>nul
powershell -command "Get-ChildItem %localappdata%\Microsoft\Protect" 2>nul
ECHO.   "DPAPI MASTER KEYS"
ECHO.   [i] Use the Mimikatz 'dpapi::cred' module with appropriate /masterkey to decrypt
ECHO.   [i] You can also extract many DPAPI masterkeys from memory with the Mimikatz 'sekurlsa::dpapi' module
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#dpapi
ECHO.
ECHO.   Looking inside %appdata%\Microsoft\Credentials\
ECHO.
dir /b/a %appdata%\Microsoft\Credentials\ 2>nul 
ECHO.
ECHO.   Looking inside %localappdata%\Microsoft\Credentials\
ECHO.
dir /b/a %localappdata%\Microsoft\Credentials\ 2>nul
ECHO.   check 42.DPAPIMasterKeys done
ECHO.   ######################################################################
ECHO.


ECHO.   ***43.UnattendedFiles***
ECHO.    "Unattended files"
IF EXIST %WINDIR%\sysprep\sysprep.xml ECHO.%WINDIR%\sysprep\sysprep.xml exists. 
IF EXIST %WINDIR%\sysprep\sysprep.inf ECHO.%WINDIR%\sysprep\sysprep.inf exists. 
IF EXIST %WINDIR%\sysprep.inf ECHO.%WINDIR%\sysprep.inf exists. 
IF EXIST %WINDIR%\Panther\Unattended.xml ECHO.%WINDIR%\Panther\Unattended.xml exists. 
IF EXIST %WINDIR%\Panther\Unattend.xml ECHO.%WINDIR%\Panther\Unattend.xml exists. 
IF EXIST %WINDIR%\Panther\Unattend\Unattend.xml ECHO.%WINDIR%\Panther\Unattend\Unattend.xml exists. 
IF EXIST %WINDIR%\Panther\Unattend\Unattended.xml ECHO.%WINDIR%\Panther\Unattend\Unattended.xml exists.
IF EXIST %WINDIR%\System32\Sysprep\unattend.xml ECHO.%WINDIR%\System32\Sysprep\unattend.xml exists.
IF EXIST %WINDIR%\System32\Sysprep\unattended.xml ECHO.%WINDIR%\System32\Sysprep\unattended.xml exists.
IF EXIST %WINDIR%\..\unattend.txt ECHO.%WINDIR%\..\unattend.txt exists.
IF EXIST %WINDIR%\..\unattend.inf ECHO.%WINDIR%\..\unattend.inf exists. 
ECHO.   check 43.UnattendedFiles done
ECHO.   ######################################################################
ECHO.


ECHO.   ***44.McAffeeSitelist***
ECHO.   "McAffee SiteList.xml"
cd %ProgramFiles% 2>nul
dir /s SiteList.xml 2>nul
cd %ProgramFiles(x86)% 2>nul
dir /s SiteList.xml 2>nul
cd "%windir%\..\Documents and Settings" 2>nul
dir /s SiteList.xml 2>nul
cd %windir%\..\Users 2>nul
dir /s SiteList.xml 2>nul

ECHO.   check 44.McAffeeSitelist done
ECHO.   ######################################################################
ECHO.


ECHO.   ***45.SAMSYSBackups***
ECHO.   "SAM and SYSTEM backups"
IF EXIST %WINDIR%\repair\SAM ECHO.%WINDIR%\repair\SAM exists. 
IF EXIST %WINDIR%\System32\config\RegBack\SAM ECHO.%WINDIR%\System32\config\RegBack\SAM exists.
IF EXIST %WINDIR%\System32\config\SAM ECHO.%WINDIR%\System32\config\SAM exists.
IF EXIST %WINDIR%\repair\SYSTEM ECHO.%WINDIR%\repair\SYSTEM exists.
IF EXIST %WINDIR%\System32\config\SYSTEM ECHO.%WINDIR%\System32\config\SYSTEM exists.
IF EXIST %WINDIR%\System32\config\RegBack\SYSTEM ECHO.%WINDIR%\System32\config\RegBack\SYSTEM exists.

ECHO.   check 45.SAMSYSBackups done
ECHO.   ######################################################################
ECHO.


ECHO.   ***46.GPPPassword***
ECHO.   "GPP Password"
cd "%SystemDrive%\Microsoft\Group Policy\history" 2>nul && dir /s/b Groups.xml Services.xml Scheduledtasks.xml DataSources.xml Printers.xml Drives.xml 2>nul && cd "%windir%\..\Documents and Settings\All Users\Application Data\Microsoft\Group Policy\history" 2>nul && dir /s/b Groups.xml Services.xml Scheduledtasks.xml DataSources.xml Printers.xml Drives.xml 2>nul

ECHO.   check 46.GPPPassword done
ECHO.   ######################################################################
ECHO.


ECHO.   ***47.CloudCreds***
ECHO.   "Cloud Credentials"
cd "%SystemDrive%\Users" && dir /s/b .aws\credentials .aws\gcloud\credentials.db .aws\legacy_credentials .aws\access_tokens.db .azure\accessTokens.json .azure\azureProfile.json 2>nul && cd "%windir%\..\Documents and Settings" && dir /s/b .aws\credentials .aws\gcloud\credentials.db .aws\legacy_credentials .aws\access_tokens.db .azure\accessTokens.json .azure\azureProfile.json 2>nul

ECHO.   check 47.CloudCreds done
ECHO.   ######################################################################
ECHO.


ECHO.   ***48.AppCMD***
ECHO.   'AppCmd"
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#appcmd.exe
IF EXIST %systemroot%\system32\inetsrv\appcmd.exe ECHO.%systemroot%\system32\inetsrv\appcmd.exe exists. 
ECHO.   check 48.AppCMD done
ECHO.   ######################################################################
ECHO.


ECHO.   ***49.RegFilesCredentials***
ECHO.   "Files in registry that may contain credentials"
ECHO.   [i] Searching specific files that may contains credentials.
ECHO.   [?] https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation#credentials-inside-files
ECHO.Looking inside HKCU\Software\ORL\WinVNC3\Password
reg query HKCU\Software\ORL\WinVNC3\Password 2>nul
ECHO.
ECHO.Looking inside HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\WinVNC4/password
reg query HKEY_LOCAL_MACHINE\SOFTWARE\RealVNC\WinVNC4 /v password 2>nul
ECHO.
ECHO.Looking inside HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\WinLogon
reg query "HKLM\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon" 2>nul | findstr /i "DefaultDomainName DefaultUserName DefaultPassword AltDefaultDomainName AltDefaultUserName AltDefaultPassword LastUsedUsername"
ECHO.
ECHO.Looking inside HKLM\SYSTEM\CurrentControlSet\Services\SNMP
reg query HKLM\SYSTEM\CurrentControlSet\Services\SNMP /s 2>nul
ECHO.
ECHO.Looking inside HKCU\Software\TightVNC\Server
reg query HKCU\Software\TightVNC\Server 2>nul
ECHO.
ECHO.Looking inside HKCU\Software\SimonTatham\PuTTY\Sessions
reg query HKCU\Software\SimonTatham\PuTTY\Sessions /s 2>nul
ECHO.
ECHO.Looking inside HKCU\Software\OpenSSH\Agent\Keys
ECHO.
reg query HKCU\Software\OpenSSH\Agent\Keys /s 2>nul
cd %USERPROFILE% 2>nul && dir /s/b *password* == *credential* 2>nul
cd ..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..\..
dir /s/b /A:-D RDCMan.settings == *.rdg == SCClient.exe == *_history == .sudo_as_admin_successful == .profile == *bashrc == httpd.conf == *.plan == .htpasswd == .git-credentials == *.rhosts == hosts.equiv == Dockerfile == docker-compose.yml == appcmd.exe == TypedURLs == TypedURLsTime == History == Bookmarks == Cookies == "Login Data" == places.sqlite == key3.db == key4.db == credentials == credentials.db == access_tokens.db == accessTokens.json == legacy_credentials == azureProfile.json == unattend.txt == access.log == error.log == *.gpg == *.pgp == *config*.php == elasticsearch.y*ml == kibana.y*ml == *.p12 == *.der == *.csr == *.cer == known_hosts == id_rsa == id_dsa == *.ovpn == anaconda-ks.cfg == hostapd.conf == rsyncd.conf == cesi.conf == supervisord.conf == tomcat-users.xml == *.kdbx == KeePass.config == Ntds.dit == SAM == SYSTEM == FreeSSHDservice.ini == sysprep.inf == sysprep.xml == unattend.xml == unattended.xml == *vnc*.ini == *vnc*.c*nf* == *vnc*.txt == *vnc*.xml == groups.xml == services.xml == scheduledtasks.xml == printers.xml == drives.xml == datasources.xml == php.ini == https.conf == https-xampp.conf == httpd.conf == my.ini == my.cnf == access.log == error.log == server.xml == SiteList.xml == ConsoleHost_history.txt == setupinfo == setupinfo.bak 2>nul | findstr /v ".dll"
cd inetpub 2>nul && (dir /s/b web.config == *.log & cd ..)

ECHO.   check 49.RegFilesCredentials done
ECHO.   ######################################################################
ECHO.


ECHO.   ***50.ExtendedDriveScan***
ECHO REGISTRY WITH STRING pass OR pwd
reg query HKLM /f passw /t REG_SZ /s
reg query HKCU /f passw /t REG_SZ /s
reg query HKLM /f pwd /t REG_SZ /s
reg query HKCU /f pwd /t REG_SZ /s
ECHO.
ECHO.   [i] Iterating through the drives
ECHO.
for /f %x in ('wmic logicaldisk get name^| more') do @set tdrive=%x && @if "%x:~1,2%"==":" (ECHO %x && ECHO FILES THAT CONTAIN THE WORD PASSWORD WITH EXTENSION: .xml .ini .txt *.cfg *.config && findstr /s/n/m/i password *.xml *.ini *.txt *.cfg *.config 2>nul | findstr /v /i "\\AppData\\Local \\WinSxS ApnDatabase.xml \\UEV\\InboxTemplates \\Microsoft.Windows.Cloud \\Notepad\+\+\\ vmware cortana alphabet \\7-zip\\" 2>nul && ECHO. && ECHO FILES WHOSE NAME CONTAINS THE WORD PASS CRED or .config not inside \Windows\ && dir /s/b *pass* == *cred* == *.config* == *.cfg 2>nul | findstr /v /i "\\windows\\" && ECHO.)
ECHO.---
ECHO.Scan complete.

ECHO.   check 50.ExtendedDriveScan done
ECHO.   ######################################################################
ECHO.


